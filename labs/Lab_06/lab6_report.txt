CS-220 Spring 2016 Lab 06 report		Due: Mar 11, 2016

Name: Rushil Kumar

1. Cut and paste your code for the insertVal function:
void insertVal(tree t, int value) {
    assert(t);
    if(t->value > value){
	if(t->left == NULL){
	    t->left = makeNode(value);
	}else{
	    insertVal(t->left, value);
	}
    }else{
	if(t->right == NULL){
	    t->right = makeNode(value);
	}else{
	    insertVal(t->right, value);
	}	
    }
}

2. What order did the values get printed when you invoked prLNR? What about prRNL?
prLNR prints the values in ascending order while prRNL prints them in descending order.

3. The "depth" of a binary tree is the largest number of nodes between the root of the tree
   and any leaf of the tree.  If you insert "n" values into a binary tree, what is the largest 
   depth you could have? What must be true about the order of the input values to acheive this depth?
The largest depth could be "n" and for this to happen, the values have to be inserted in ascending or descending order.
   
4. If "n" values are inserted in the tree, what is the smallest possible value for the depth 
   of the tree?
log(n + 1) - 1 with the log function having a base 2. This value rounded up will give you the smallest possible depth for the tree.    
   
5. If a binary tree has "n" values and a depth of "d", then what is the maximum number of comparisons 
   required to insert the "n+1"th number into the tree?
d comparisons.
